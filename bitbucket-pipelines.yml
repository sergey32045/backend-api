# This is an example Starter pipeline configuration
# Use a skeleton to build, test and deploy using manual and parallel steps
# -----
# You can specify a custom docker image from Docker Hub as your build environment.

image: node:16

pipelines:
  branches:
    master:
      - parallel:
        - step:
            name: "Install dependencies"
            caches:
                - node
            script:
                - cd api && yarn install
        - step:
            #python image with aws-cli installed
            name: "Docker build images and push to registry"
            services:
              - docker
            script:
              - curl -L "https://github.com/docker/compose/releases/download/1.25.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              - chmod +x /usr/local/bin/docker-compose
              - docker-compose -v
              - export BUILD_ID=$BITBUCKET_BRANCH_$BITBUCKET_COMMIT_$BITBUCKET_BUILD_NUMBER
              - docker-compose build -t ${AWS_REGISTRY_URL}:$BUILD_ID
              - docker tag ${AWS_REGISTRY_URL}:$BUILD_ID
              - pipe: atlassian/aws-ecr-push-image:1.3.0
                variables:
                  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
                  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
                  AWS_DEFAULT_REGION: eu-central-1
                  IMAGE_NAME: ${AWS_REGISTRY_URL}:$BUILD_ID
                  TAGS: "${AWS_REGISTRY_URL}:$BUILD_ID"
